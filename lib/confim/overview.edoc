@title confim (General Application Services)
@doc 
<img src="http://www.erlware.org/images/erlware-header.gif"/>

<h2>What confim Does</h2>
<p>
Confim is a much more powerful way to configure your OTP Release. It 
relies on the same ETS based infrastructure and *.config files as the
standard OTP configuration provided by the application module. Confim
is far more powerful however.
</p>
<p>
    The application module that comes with standard Erlang does this
    as well but provides only a minimal subset of what confim provides.
    confim builds ontop of application and provides functions for
   <ul>
     <li>Setting and overriding configuration from the commandline</li>
     <li>Configuration file inheritance and overriding</li>
     <li>Pulling config at run time</li>
     <li>Updating config at run time</li>
     <li>Working with and managing config files</li>
     <li>Easily set default config values in your code</li>
   </ul>
</p>

<h2>Why the name confim?</h2>
<p>
The <em>confim</em> application stands for 
Configuration Improved -&gt; Conf Improved -&gt; Confim
</p>

<h2>Commandline Config Overriding</h2>

<p>Commandline overriding is accomplished by adding plain arguments to a call to
erl.  Plain arguments are those that are unevaluated by the run time system and
are specified by supplying the -extra flag as the last thing on the commandline.
after the -extra flag you add the -override flag to signal overrides and follow 
that with overrides of the form -&lt;appname&gt; &lt;key&gt; &lt;value&gt;. 
For example take the config file below for the Faxien application. 
</p>
```
{faxien, [
          {history, true},
          {logging, tty}
         [
}
'''
<p>
lets say you wanted to override the logging entry. You could use 
<pre>-extra -override -faxien logging {file, \"/tmp/fax.log\"} -faxien history false</pre>.
in order to override more values simply add more -&lt;appname&gt; &lt;key&gt; &lt;value&gt;
entries. Note that quotes both single and double should be escaped on the shell i.e \" or \' 
to ensure the shell does not evaluate them and that they are passed through to the VM.
</p>

<h2>Filebased Config Overriding (Config Inheritance)</h2>
<p>
Config file overrides are accomplished through the following entry into the config file:
</p>

```
{override_file_path, <some-file-path>}
'''

<p>
The override_file_path should be a path, not just a filename. If only a file name is supplied the file is assumed to be off the users home directory. To specifically configure an override file to be relative to a users home directory can be accomplished using the conveience format config entry below.
</p>

```
{home_file_path, <some-file-path>}
'''

such as

```
{home_file_path, ".faxien_override.config"}
'''

the above would cause Faxien to look in $HOME for a file called .faxien_override.config to override the config for the release.

<h2>Configuration Functions</h2>
<p>
Gas provides programatic support for applications to manage pulling and setting their config data.
</p>
   <ul>
     <li>Pulling config at run time</li>
     <li>Updating config at run time</li>
   </ul>
<p>
See the documentation for the gas module for the get_env, set_env, modify_config_file and modify_config_value functions.
</p>

@author Martin Logan
@copyright 2003 - 2009 Erlware
